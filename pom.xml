<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.onehippo.cms7</groupId>
    <artifactId>hippo-cms7-enterprise-release</artifactId>
    <version>14.1.0</version>
  </parent>

  <name>HEE Web</name>
  <description>HEE Web</description>
  <groupId>uk.nhs.hee.web</groupId>
  <artifactId>hee-web</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <!--
    The below project elements are emptied/overridden as otherwise their metadata would be
    inherited or merged from the parent hippo-cms7-release pom (or its hippo-cms7-project pom).

    DO NOT remove these tags but instead fill them in appropriately as needed,
    UNLESS the inherited values are valid for your project.
  -->
  <organization />
  <licenses>
    <license />
  </licenses>
  <mailingLists>
    <mailingList />
  </mailingLists>
  <developers>
    <developer />
  </developers>
  <contributors>
    <contributor />
  </contributors>
  <issueManagement />
  <!--
  <scm>
    <connection/>
    <developerConnection/>
    <url/>
  </scm>
  -->
  <ciManagement />
  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/Manifesto-Digital/hee-content-management-system</url>
    </repository>
    <snapshotRepository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/Manifesto-Digital/hee-content-management-system</url>
    </snapshotRepository>
  </distributionManagement>
  <!-- End of emptied/overridden metadata from parent hippo-cms7-release pom. -->

  <properties>
    <!-- Maven CI Friendly Version -->
    <revision>0.1.1-SNAPSHOT</revision>

    <!--***START temporary override of versions*** -->
    <!-- ***END temporary override of versions*** -->

    <essentials.version>14.1.0</essentials.version>
    <jsp-api.version>2.2</jsp-api.version>
    <taglibs.version>1.2.5</taglibs.version>

    <forge.camel-hippoevt.version>2.0.2</forge.camel-hippoevt.version>
    <camel.version>2.23.1</camel.version>
    <hawtio.version>1.4.44</hawtio.version>
    <mockserver.version>5.11.0</mockserver.version>
    <spring.version>5.1.1.RELEASE</spring.version>
	<docker.maven.plugin.version>0.33.0</docker.maven.plugin.version>
    <development-module-deploy-dir>shared/lib</development-module-deploy-dir>
    <!-- <httpcore4-version>4.4.10</httpcore4-version>
    <httpclient4-version>4.5.6</httpclient4-version> -->
    <hippo.cms.locales>nl,de,fr,es,zh</hippo.cms.locales>
    <buildNumber>${maven.build.timestamp}</buildNumber>
  </properties>

  <repositories>
    <repository>
      <id>hippo</id>
      <name>Hippo maven 2 repository.</name>
      <url>https://maven.onehippo.com/maven2/</url>
    </repository>
    <repository>
      <releases>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <id>hippo-maven2-enterprise</id>
      <name>Hippo Enterprise Maven 2</name>
      <url>https://maven.onehippo.com/maven2-enterprise</url>
    </repository>
    <repository>
      <id>hippo-maven2-forge</id>
      <name>Hippo Maven 2 Forge</name>
      <url>https://maven.onehippo.com/maven2-forge/</url>
    </repository>
  </repositories>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>${jsp-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- other predefined runtime scope versioned dependencies -->
      <dependency>
        <groupId>org.apache.taglibs</groupId>
        <artifactId>taglibs-standard-spec</artifactId>
        <version>${taglibs.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.taglibs</groupId>
        <artifactId>taglibs-standard-impl</artifactId>
        <version>${taglibs.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- other predefined compile scope versioned dependencies -->
      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <!-- apache camel integration -->
      <dependency>
        <groupId>org.onehippo.forge.camel-hippoevt</groupId>
        <artifactId>camel-hippoevt</artifactId>
        <version>${forge.camel-hippoevt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-jms</artifactId>
        <version>${camel.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.hawt</groupId>
        <artifactId>hawtio-web</artifactId>
        <version>${hawtio.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.mock-server</groupId>
        <artifactId>mockserver-war</artifactId>
        <version>${mockserver.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-http4</artifactId>
        <version>${camel.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_3.0_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.algolia</groupId>
        <artifactId>algoliasearch-core</artifactId>
        <version>3.6.1</version>
      </dependency>

      <dependency>
        <groupId>com.algolia</groupId>
        <artifactId>algoliasearch-apache</artifactId>
        <version>3.6.1</version>
      </dependency>
<!--      <dependency>-->
<!--        <groupId>org.apache.httpcomponents</groupId>-->
<!--        <artifactId>httpcore</artifactId>-->
<!--        <version>${httpcore4-version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.apache.httpcomponents</groupId>-->
<!--        <artifactId>httpclient</artifactId>-->
<!--        <version>${httpclient4-version}</version>-->
<!--        <exclusions>-->
<!--          <exclusion>-->
<!--            <groupId>commons-logging</groupId>-->
<!--            <artifactId>commons-logging</artifactId>-->
<!--          </exclusion>-->
<!--        </exclusions>-->
<!--      </dependency>-->
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.1.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>package</defaultGoal>
    <pluginManagement>
      <plugins>
        <!--
          This plugin configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.
        -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <goals>
                      <goal>regex-property</goal>
                    </goals>
                    <versionRange>[0.0,)</versionRange>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Build>${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>4.0.0</version>
        <executions>
            <execution>
                <id>get-the-git-infos</id>
                <goals>
                    <goal>revision</goal>
                </goals>
                <phase>validate</phase>
            </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <verbose>true</verbose>
          <skipPoms>false</skipPoms>
            <includeOnlyProperties>
                <includeOnlyProperty>git.commit.id.describe</includeOnlyProperty>
            </includeOnlyProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.1.0</version>
        <configuration>
            <updatePomFile>true</updatePomFile>
            <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
            <execution>
                <id>flatten</id>
                <phase>process-resources</phase>
                <goals>
                    <goal>flatten</goal>
                </goals>
            </execution>
            <execution>
                <id>flatten.clean</id>
                <phase>clean</phase>
                <goals>
                    <goal>clean</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>

    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>jrebel</name>
        </property>
      </activation>
      <modules>
        <module>cms-dependencies</module>
        <module>repository-data</module>
        <module>cms</module>
        <module>site</module>
        <module>hawtio</module>
        <module>mockserver</module>
        <module>essentials</module>
      </modules>
    </profile>

    <profile>
      <id>docker.build</id>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}-cms</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}-webapp</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>docker.run</id>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}-essentials</artifactId>
          <version>${project.version}</version>
          <type>war</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}-repository-data-development</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>${project.artifactId}-repository-data-site-development</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>mysql</id>
    </profile>

    <profile>
      <id>docker.mysql</id>
      <properties>
        <docker.db.bind.1>${project.basedir}/target/mysql-data:/var/lib/mysql</docker.db.bind.1>
        <docker.db.bind.2>${project.basedir}/db-bootstrap:/docker-entrypoint-initdb.d</docker.db.bind.2>

        <docker.brxm.envRun.MYSQL_DB_HOST>${docker.container.db.net.hee-web-network.ip}</docker.brxm.envRun.MYSQL_DB_HOST>
      </properties>
    </profile>

    <profile>
      <id>postgres</id>
    </profile>

    <profile>
      <id>docker.postgres</id>
      <properties>
        <docker.db.bind.1>${project.basedir}/target/postgres-data:/var/lib/postgresql/data</docker.db.bind.1>
        <docker.db.bind.2>${project.basedir}/db-bootstrap:/docker-entrypoint-initdb.d</docker.db.bind.2>

        <docker.brxm.envRun.POSTGRES_DB_HOST>${docker.container.db.net.hee-web-network.ip}</docker.brxm.envRun.POSTGRES_DB_HOST>
      </properties>
    </profile>

    <profile>
      <id>cargo.run</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <configuration>
              <configuration>
                <configfiles>
                  <configfile>
                    <file>${project.basedir}/conf/context.xml</file>
                    <todir>conf/</todir>
                    <tofile>context.xml</tofile>
                  </configfile>
                  <configfile>
                    <file>${project.basedir}/conf/catalina-logging.properties</file>
                    <todir>conf/</todir>
                    <tofile>logging.properties</tofile>
                  </configfile>
                  <configfile>
                    <file>${project.basedir}/conf/hst-dev.properties</file>
                    <todir>conf/</todir>
                    <tofile>hst.properties</tofile>
                  </configfile>
                  <configfile>
                    <file>${project.basedir}/conf/platform-dev.properties</file>
                    <todir>conf/</todir>
                    <tofile>platform.properties</tofile>
                  </configfile>
                </configfiles>
                <files>
                  <file>
                    <file>${project.basedir}/repository-data/development/target/hee-web-repository-data-development-${project.version}.jar</file>
                    <todir>${development-module-deploy-dir}</todir>
                  </file>
                  <file>
                    <file>${project.basedir}/repository-data/site-development/target/hee-web-repository-data-site-development-${project.version}.jar</file>
                    <todir>${development-module-deploy-dir}</todir>
                  </file>
                </files>
              </configuration>
              <deployables>
                <deployable>
                  <type>war</type>
                  <properties>
                    <context>/cms</context>
                  </properties>
                  <location>${project.basedir}/cms/target/cms</location>
                </deployable>
                <deployable>
                  <location>${project.basedir}/site/webapp/target/site</location>
                  <type>war</type>
                  <properties>
                    <context>/site</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${project.basedir}/hawtio/target/hawtio.war</location>
                  <type>war</type>
                  <properties>
                    <context>/hawtio</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${project.basedir}/mockserver/target/mockserver.war</location>
                  <type>war</type>
                  <properties>
                    <context>/mockserver</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${project.basedir}/essentials/target/essentials</location>
                  <type>war</type>
                  <properties>
                    <context>/essentials</context>
                  </properties>
                </deployable>
              </deployables>
              <container>
                <systemProperties>
                  <log4j.configurationFile>file://${project.basedir}/conf/log4j2-dev.xml</log4j.configurationFile>
                  <!-- enables auto export and web files watch: -->
                  <project.basedir>${project.basedir}</project.basedir>
                  <send.usage.statistics.to.hippo>true</send.usage.statistics.to.hippo>
                  <base.uri>http://localhost:8080</base.uri>
                </systemProperties>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- additional profile to combine with cargo:run to *not* bootstrap the development modules:
           $ mvn -P cargo.run,without-development-data -->
      <id>without-development-data</id>
      <properties>
        <development-module-deploy-dir>temp</development-module-deploy-dir>

        <!-- Comment out Dockerfile instruction that copies development modules to an image -->
        <docker.brxm.copy.dev.libs.cmd>#</docker.brxm.copy.dev.libs.cmd>
      </properties>
    </profile>

    <profile>
      <id>dist</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>distro-assembly</id>
                <phase>validate</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <!-- `git.commit.id.describe` could be replaced with `git.commit.id.abbrev` if we are interested in only the CommitId -->
                  <finalName>${project.artifactId}-${project.version}-${git.commit.id.describe}</finalName>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/distribution.xml</descriptor>
                  </descriptors>
                  <appendAssemblyId>false</appendAssemblyId>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dist-with-development-data</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>distro-assembly-with-development-data</id>
                <phase>validate</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/distribution-with-development-data.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
